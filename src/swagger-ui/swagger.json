{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Item": {
				"properties": {
					"name": {
						"type": "string",
						"description": "商品名称"
					},
					"platform": {
						"type": "string",
						"enum": [
							"taobao",
							"jd"
						],
						"description": "商品平台"
					},
					"date": {
						"type": "string",
						"format": "date-time",
						"description": "创建时间"
					}
				},
				"required": [
					"name",
					"platform",
					"date"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ItemList": {
				"items": {
					"$ref": "#/components/schemas/Item"
				},
				"type": "array"
			},
			"CommonResponse_ItemList_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/ItemList"
					}
				},
				"required": [
					"success",
					"code",
					"message",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CommonResponse_any_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"data": {}
				},
				"required": [
					"success",
					"code",
					"message",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AddItem": {
				"properties": {
					"name": {
						"type": "string",
						"description": "商品名称"
					},
					"platform": {
						"type": "string",
						"enum": [
							"taobao",
							"jd"
						],
						"description": "商品平台"
					}
				},
				"required": [
					"name",
					"platform"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double",
						"description": "用户ID"
					},
					"email": {
						"type": "string",
						"description": "用户邮箱"
					},
					"name": {
						"type": "string",
						"description": "用户名",
						"example": "demoName",
						"minLength": 3,
						"maxLength": 20,
						"pattern": "^[a-zA-Z]+$"
					},
					"status": {
						"type": "string",
						"enum": [
							"online",
							"offline"
						],
						"description": "用户状态"
					},
					"phoneNumbers": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "用户手机号码"
					}
				},
				"required": [
					"id",
					"email",
					"name",
					"phoneNumbers"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ErrorResponseModel": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string",
						"minLength": 2
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.email-or-name-or-phoneNumbers_": {
				"properties": {
					"email": {
						"type": "string",
						"description": "用户邮箱"
					},
					"name": {
						"type": "string",
						"description": "用户名",
						"example": "demoName",
						"minLength": 3,
						"maxLength": 20,
						"pattern": "^[a-zA-Z]+$"
					},
					"phoneNumbers": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "用户手机号码"
					}
				},
				"required": [
					"email",
					"name",
					"phoneNumbers"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserCreationParams": {
				"$ref": "#/components/schemas/Pick_User.email-or-name-or-phoneNumbers_"
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "access_token",
				"in": "query"
			},
			"authorization": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "docker-node-mongo-typescript",
		"version": "1.0.0",
		"description": "Use MongoDB with Docker to create Node service with TypeScript",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "harry huang"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/item/list": {
			"get": {
				"operationId": "GetList",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommonResponse_ItemList_"
								}
							}
						}
					}
				},
				"description": "获取商品列表",
				"tags": [
					"Item 商品模块"
				],
				"security": [],
				"parameters": [
					{
						"description": "商品ID",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {}
					},
					{
						"description": "商品名称",
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/item/detail": {
			"get": {
				"operationId": "GetDetail",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommonResponse_any_"
								}
							}
						}
					}
				},
				"description": "获取商品详情",
				"tags": [
					"Item 商品模块"
				],
				"security": [],
				"parameters": [
					{
						"description": "商品ID",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {}
					}
				]
			}
		},
		"/item/new": {
			"post": {
				"operationId": "AddItem",
				"responses": {
					"302": {
						"description": "Redirect"
					}
				},
				"tags": [
					"Item 商品模块"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddItem"
							}
						}
					}
				}
			}
		},
		"/auth/query": {
			"get": {
				"operationId": "GetWithApi",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseModel"
								}
							}
						}
					}
				},
				"tags": [
					"Auth 用户授权登录模块"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/auth/header": {
			"get": {
				"operationId": "GetWithToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseModel"
								}
							}
						}
					}
				},
				"tags": [
					"Auth 用户授权登录模块"
				],
				"security": [
					{
						"authorization": []
					}
				],
				"parameters": []
			}
		},
		"/user/{userId}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "获取用户信息",
				"tags": [
					"User 用户模块"
				],
				"security": [],
				"parameters": [
					{
						"description": "用户ID",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "用户名称",
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "删除用户",
				"tags": [
					"User 用户模块"
				],
				"security": [],
				"parameters": [
					{
						"description": "用户ID",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "修改用户信息",
				"tags": [
					"User 用户模块"
				],
				"security": [],
				"parameters": [
					{
						"description": "用户ID",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "用户信息",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreationParams"
							}
						}
					}
				}
			}
		},
		"/user/add": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"description": "新建用户",
				"tags": [
					"User 用户模块"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreationParams"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}