{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Platform": {
				"type": "string",
				"enum": [
					"taobao",
					"jd"
				]
			},
			"Item": {
				"properties": {
					"name": {
						"type": "string",
						"description": "商品名称"
					},
					"platform": {
						"$ref": "#/components/schemas/Platform",
						"description": "商品平台"
					},
					"date": {
						"type": "string",
						"format": "date-time",
						"description": "创建时间"
					}
				},
				"required": [
					"name",
					"platform"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ItemList": {
				"items": {
					"$ref": "#/components/schemas/Item"
				},
				"type": "array"
			},
			"CommonResponse_ItemList_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/ItemList"
					}
				},
				"required": [
					"success",
					"code",
					"message",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CommonResponse_Item_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Item"
					}
				},
				"required": [
					"success",
					"code",
					"message",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AddItem": {
				"properties": {
					"name": {
						"type": "string",
						"description": "商品名称"
					},
					"platform": {
						"type": "string",
						"enum": [
							"taobao",
							"jd"
						],
						"description": "商品平台"
					}
				},
				"required": [
					"name",
					"platform"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"properties": {
					"id": {
						"type": "string",
						"description": "用户ID"
					},
					"userName": {
						"type": "string",
						"description": "用户名",
						"example": "demoName",
						"minLength": 3,
						"maxLength": 20
					},
					"nickName": {
						"type": "string",
						"description": "昵称",
						"minLength": 3,
						"maxLength": 50
					},
					"phone": {
						"type": "string",
						"description": "手机号",
						"pattern": "^1[3-9]\\d{9}$"
					},
					"email": {
						"type": "string",
						"description": "邮箱"
					}
				},
				"required": [
					"userName",
					"phone"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ErrorResponseModel": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string",
						"minLength": 2
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pagination_User_": {
				"properties": {
					"currentPage": {
						"type": "number",
						"format": "double",
						"description": "当前分页"
					},
					"pageSize": {
						"type": "number",
						"format": "double",
						"description": "分页大小"
					},
					"total": {
						"type": "number",
						"format": "double",
						"description": "分页总条数"
					},
					"list": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array",
						"description": "分页数据"
					}
				},
				"required": [
					"currentPage",
					"pageSize",
					"total",
					"list"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserPagination": {
				"$ref": "#/components/schemas/Pagination_User_"
			},
			"CommonResponse_UserPagination_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/UserPagination"
					}
				},
				"required": [
					"success",
					"code",
					"message",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CommonResponse_User_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"code": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/User"
					}
				},
				"required": [
					"success",
					"code",
					"message",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserRegisterParams": {
				"properties": {
					"id": {
						"type": "string",
						"description": "用户ID"
					},
					"userName": {
						"type": "string",
						"description": "用户名",
						"example": "demoName",
						"minLength": 3,
						"maxLength": 20
					},
					"nickName": {
						"type": "string",
						"description": "昵称",
						"minLength": 3,
						"maxLength": 50
					},
					"phone": {
						"type": "string",
						"description": "手机号",
						"pattern": "^1[3-9]\\d{9}$"
					},
					"email": {
						"type": "string",
						"description": "邮箱"
					},
					"password": {
						"type": "string",
						"description": "密码",
						"minLength": 6,
						"maxLength": 30
					}
				},
				"required": [
					"userName",
					"phone",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_UserRegisterParams.userName-or-password_": {
				"properties": {
					"userName": {
						"type": "string",
						"description": "用户名",
						"example": "demoName",
						"minLength": 3,
						"maxLength": 20
					},
					"password": {
						"type": "string",
						"description": "密码",
						"minLength": 6,
						"maxLength": 30
					}
				},
				"required": [
					"userName",
					"password"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserLoginParams": {
				"$ref": "#/components/schemas/Pick_UserRegisterParams.userName-or-password_"
			},
			"Pick_User.nickName-or-email_": {
				"properties": {
					"nickName": {
						"type": "string",
						"description": "昵称",
						"minLength": 3,
						"maxLength": 50
					},
					"email": {
						"type": "string",
						"description": "邮箱"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserPatchParams": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Pick_User.nickName-or-email_"
					},
					{
						"properties": {
							"phone": {
								"type": "string",
								"description": "手机号",
								"pattern": "^1[3-9]\\d{9}$"
							}
						},
						"type": "object"
					}
				]
			},
			"Pick_User.phone_": {
				"properties": {
					"phone": {
						"type": "string",
						"description": "手机号",
						"pattern": "^1[3-9]\\d{9}$"
					}
				},
				"required": [
					"phone"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserUpdateParams": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Pick_User.phone_"
					},
					{
						"properties": {
							"email": {
								"type": "string",
								"description": "邮箱"
							},
							"nickName": {
								"type": "string"
							}
						},
						"required": [
							"email",
							"nickName"
						],
						"type": "object"
					}
				]
			}
		},
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "access_token",
				"in": "query"
			},
			"authorization": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "docker-node-mongo-typescript",
		"version": "1.0.0",
		"description": "Use MongoDB with Docker to create Node service with TypeScript",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "harry huang"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/item/list": {
			"get": {
				"operationId": "GetList",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommonResponse_ItemList_"
								}
							}
						}
					}
				},
				"description": "获取商品列表",
				"tags": [
					"Item 商品模块"
				],
				"security": [],
				"parameters": [
					{
						"description": "商品ID",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {}
					},
					{
						"description": "商品名称",
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/item/detail": {
			"get": {
				"operationId": "GetDetail",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommonResponse_Item_"
								}
							}
						}
					}
				},
				"description": "获取商品详情",
				"tags": [
					"Item 商品模块"
				],
				"security": [],
				"parameters": [
					{
						"description": "商品ID",
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {}
					}
				]
			}
		},
		"/item/new": {
			"post": {
				"operationId": "AddItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommonResponse_Item_"
								}
							}
						}
					}
				},
				"description": "添加商品",
				"tags": [
					"Item 商品模块"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddItem"
							}
						}
					}
				}
			}
		},
		"/auth/query": {
			"get": {
				"operationId": "GetWithApi",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseModel"
								}
							}
						}
					}
				},
				"tags": [
					"Auth 用户授权登录模块"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/auth/header": {
			"get": {
				"operationId": "GetWithToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"default": {
						"description": "Unexpected error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseModel"
								}
							}
						}
					}
				},
				"tags": [
					"Auth 用户授权登录模块"
				],
				"security": [
					{
						"authorization": []
					}
				],
				"parameters": []
			}
		},
		"/user/list": {
			"get": {
				"operationId": "List",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommonResponse_UserPagination_"
								}
							}
						}
					}
				},
				"description": "用户列表",
				"tags": [
					"User 用户模块"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "currentPage",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "pageSize",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/user/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Register Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommonResponse_User_"
								}
							}
						}
					},
					"403": {
						"description": "code:11000, User has been registered"
					}
				},
				"description": "用户注册",
				"tags": [
					"User 用户模块"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserRegisterParams"
							}
						}
					}
				}
			}
		},
		"/user/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"301": {
						"description": "redirect",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommonResponse_User_"
								}
							}
						}
					}
				},
				"description": "用户登录",
				"tags": [
					"User 用户模块"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserLoginParams"
							}
						}
					}
				}
			}
		},
		"/user/detail": {
			"get": {
				"operationId": "Detail",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Get user detail through header authorization",
				"tags": [
					"User 用户模块"
				],
				"security": [
					{
						"authorization": []
					}
				],
				"parameters": []
			}
		},
		"/user/info": {
			"get": {
				"operationId": "Info",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Get user info through access_token in query",
				"tags": [
					"User 用户模块"
				],
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/user/patch": {
			"patch": {
				"operationId": "Patch",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "修改用户名称",
				"tags": [
					"User 用户模块"
				],
				"security": [
					{
						"authorization": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserPatchParams"
							}
						}
					}
				}
			}
		},
		"/user/update": {
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "修改用户信息",
				"tags": [
					"User 用户模块"
				],
				"security": [
					{
						"authorization": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserUpdateParams"
							}
						}
					}
				}
			}
		},
		"/user/delete": {
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"description": "删除用户",
				"tags": [
					"User 用户模块"
				],
				"security": [
					{
						"authorization": []
					}
				],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}